name: Check GitHub Contributions and Notify

on:
  schedule:
    - cron: "0 13 * * *" # UTC時間で毎日13時（日本時間で22時）に実行

jobs:
  check-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Check for Contributions on Main and Master Branches
        id: check_contributions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 現在のUTC日付を取得
          DATE=$(date -u +"%Y-%m-%dT00:00:00Z")
          # GitHubリポジトリの所有者のユーザー名を取得
          USERNAME="${{ github.repository_owner }}"
          # GraphQLクエリを使用して、ユーザーのリポジトリとそのコミット履歴の合計数を取得
          QUERY="{\"query\": \"query { user(login: \\\"$USERNAME\\\") { repositories(first: 100, affiliations: OWNER) { edges { node { name, ref(qualifiedName: \\\"HEAD\\\") { target { ... on Commit { history(since: \\\"$DATE\\\", until: \\\"$DATE\\\") { totalCount } } } } } } } }\"}"

          # GitHub GraphQL APIにクエリを送信し、レスポンスを取得
          RESPONSE=$(curl -s -H "Authorization: bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -d "$QUERY" https://api.github.com/graphql)
          HTTP_STATUS=$(echo "$RESPONSE" | jq -r '.http_status' 2>/dev/null)

          # GraphQLレスポンス内のerrorsフィールドをチェック
          HTTP_STATUS=$(curl -s -o response.json -w "%{http_code}" -H "Authorization: bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -d "$QUERY" https://api.github.com/graphql)
          RESPONSE_BODY=$(<response.json)

          # HTTPステータスコードのチェック
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Error: HTTP request failed with status $HTTP_STATUS"
            exit 1
          fi

          # GraphQLレスポンス内のerrorsフィールドをチェック
          if echo "$RESPONSE_BODY" | jq .errors; then
            echo "Error: GraphQL query failed"
            exit 1
          fi
          # jqを使用して、取得したJSONから全てのリポジトリのコミット数の合計を計算
          TOTAL_COUNT=$(echo "$RESPONSE_BODY" | jq '[.data.user.repositories.edges[].node.ref.target.history.totalCount] | add // 0')

          echo "Total contributions: $TOTAL_COUNT"
          # 環境変数に合計コミット数を設定し、後のステップで使用
          echo "CONTRIBUTIONS_COUNT=$TOTAL_COUNT" >> $GITHUB_ENV

      - name: Send LINE Notification if No Contributions
        if: env.CONTRIBUTIONS_COUNT == '0'
        env:
          LINE_TOKEN: ${{ secrets.LINE_TOKEN }}
          MESSAGE: "まもなく今日が終わりますが、まだGitHubにコミットしていません！今すぐコミットしましょう！"
        run: |
          # LINE Notify APIを使用して、設定されたメッセージをLINEに通知
          curl -X POST -H "Authorization: Bearer $LINE_TOKEN" -F "message=$MESSAGE" https://notify-api.line.me/api/notify
