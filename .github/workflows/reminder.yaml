name: Check GitHub Contributions and Notify

on:
  schedule:
    - cron: "0 13 * * *" # UTC時間で毎日13時（日本時間で22時）に実行

jobs:
  check-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Check for Contributions on All Branches
        id: check_contributions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 現在のUTC日付を取得
          DATE=$(date -u +"%Y-%m-%dT00:00:00Z")
          DATE_END=$(date -u +"%Y-%m-%dT23:59:59Z")
          # GitHubリポジトリの所有者のユーザー名を取得
          USERNAME="${{ github.repository_owner }}"

          echo "Checking contributions for user: $USERNAME from $DATE to $DATE_END"

          # GraphQLクエリを作成する関数
          create_query() {
            echo '{"query": "query { user(login: \"'"$USERNAME"'\") { repositories(first: '"$1"', after: '"$2"', affiliations: OWNER) { pageInfo { hasNextPage, endCursor } edges { node { name, refs(first: 100, refPrefix: \"refs/heads/\") { edges { node { name, target { ... on Commit { history(since: \"'"$DATE"'\", until: \"'"$DATE_END"'\") { totalCount } } } } } } } } } } }"}'
          }

          # 初期クエリを設定
          QUERY=$(create_query 100 null)
          TOTAL_COUNT=0
          HAS_NEXT_PAGE=true
          END_CURSOR=null

          # ページネーションを考慮してリクエストを繰り返す
          while [ "$HAS_NEXT_PAGE" = true ]; do
            RESPONSE=$(curl -s -w "%{http_code}" -o response.json -H "Authorization: bearer $GITHUB_TOKEN" -H "Content-Type: application/json" -d "$QUERY" https://api.github.com/graphql)
            HTTP_STATUS=$(tail -n1 <<< "$RESPONSE")
            RESPONSE_BODY=$(head -n -1 response.json)

            echo "HTTP Status: $HTTP_STATUS"
            echo "Response Body: $RESPONSE_BODY"

            if [ "$HTTP_STATUS" -ne 200 ]; then
              echo "Error: HTTP request failed with status $HTTP_STATUS"
              cat response.json
              exit 1
            fi

            if echo "$RESPONSE_BODY" | jq .errors | grep -qv null; then
              echo "Error: GraphQL query failed with errors"
              echo "$RESPONSE_BODY" | jq .errors
              exit 1
            fi

            # 各ブランチのコミット数を合計する
            TOTAL_COUNT=$(($TOTAL_COUNT + $(echo "$RESPONSE_BODY" | jq '[.data.user.repositories.edges[].node.refs.edges[].node.target.history.totalCount] | add // 0')))
            HAS_NEXT_PAGE=$(echo "$RESPONSE_BODY" | jq .data.user.repositories.pageInfo.hasNextPage)
            END_CURSOR=$(echo "$RESPONSE_BODY" | jq -r .data.user.repositories.pageInfo.endCursor)

            if [ "$HAS_NEXT_PAGE" = true ]; then
              QUERY=$(create_query 100 "$END_CURSOR")
            fi
          done

          echo "Total contributions: $TOTAL_COUNT"
          echo "CONTRIBUTIONS_COUNT=$TOTAL_COUNT" >> $GITHUB_ENV

      - name: Send LINE Notification if No Contributions
        if: env.CONTRIBUTIONS_COUNT == '0'
        env:
          LINE_TOKEN: ${{ secrets.LINE_TOKEN }}
          MESSAGE: "まもなく今日が終わりますが、まだGitHubにコミットしていません！今すぐコミットしましょう！"
        run: |
          curl -X POST -H "Authorization: Bearer
